{"version":3,"file":"static/js/780.adde2447.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Form/Form.styled.jsx","components/Form/Form.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","pages/contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({name}) => \n    name.toLowerCase().includes(filter.toLowerCase()));\n  }\n);","import styled from \"styled-components\";\n\nexport const FormEl = styled.form`\n\ndisplay: flex;\njustify-content: space-evenly;\nmargin-bottom: 100px;\n\n}\n\n`;\n\n\nexport const Label = styled.label`\nfont-size: 18px;\nfont-weight: 600;\n`;\n\nexport const Input = styled.input`\nmargin-left: 10px;\nheight: 30px;\n`\n\nexport const Button = styled.button`\ncursor: pointer;\nfont-size: 16px;\nborder-radius: 5px;\nbackground-color: #63ff53;\nbox-shadow: 4px 4px #7d947d;\n`;","import React, { useState } from 'react';\nimport { FormEl, Label, Input, Button } from \"./Form.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/selectors';\n\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\nconst contact = {\n  name: name,\n  number: number,\n};\n\n    const isContactExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    ); \n    if (isContactExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Contact with name ${contact.name} already exists!`,\n        'Ok'\n      );\n      return;\n    };\n    const isNumberExist = contacts.find(\n      ({ number }) => number.replace(/\\D/g, '') === contact.number.replace(/\\D/g, '')\n    );\n    if (isNumberExist) {\n      Notiflix.Report.warning(\n        'Alert',\n        `Number with name ${contact.number} already exists!`,\n        'Ok'\n      );\n      return;\n    }\n\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  }; \n\n  return (\n    <FormEl onSubmit={handleSubmit} autoComplete='off'>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormEl>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\nmargin-left: 30px;\nfont-size: 18px;\nfont-weight: 600;\npadding: 10px;\nmargin-bottom: 15px;\n&:hover,\n&:focus {\n  border: 1px solid white;\n  border-radius: 5px;\n  cursor: pointer;\n}\n`;\n\nexport const ItemContainer = styled.div`\ndisplay: flex;\nwidth: 800px;\n    justify-content: space-between;\n    margin: auto;\n    font-size: 24px;\n    font-weight: 500;\n\n\n\n`;\n\nexport const Button = styled.button`\nmargin-left: 30px;\nheight: 30px;\nwidth: 70px;\ncursor: pointer;\nfont-size: 16px;\nborder-radius: 5px;\nbackground-color: #ff7953;\nbox-shadow: 4px 4px #7d947d;\n`;","import PropTypes from 'prop-types';\nimport { ItemContainer, Button, Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  \n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id))\n    .then(() => {\n      dispatch(fetchContacts());\n    });\n  };\n\n  return (\n    <Item>\n      <ItemContainer>\n        <div>\n          <span>{contact.name}: </span>\n          <span>{contact.number}</span>\n        </div>\n        <Button type=\"button\" onClick={handleDelete}>Delete</Button>\n      </ItemContainer>\n    </Item>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ol`\nborder: 2px solid #ccc;\npadding: 20px 130px;\nmargin: auto;\n`","import Contact from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectFilteredContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { Loader } from '../Loader/Loader';\nimport { fetchContacts } from 'redux/operations';\n\n\nfunction ContactList () {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {isLoading && !error? (\n        <Loader/>\n      ): filteredContacts.length === 0 && !error ? (\n        <p>The Phonebook is empty. Add your first contact.</p>\n      ) : (filteredContacts.map(({ id, name, number}) =>  (        \n        <Contact \n        key={id} \n        contact={{ name, id, number}}/>\n        )\n      ))\n      }\n    </List>\n  );\n}\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\ndisplay: flex;\njustify-content: center;\n    align-items: center;\n    flex-direction: column;\n`;\n\nexport const Input = styled.input`\nmargin-bottom: 20px;\nheight: 30px;\n\n`;\n\nexport const Text = styled.p`\nfont-style: italic;\nfont-size: 16px;\nfont-weight: 600;\nmargin: 0 0 10px 0;\n`","import { Input, FilterContainer, Text } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts, selectFilter } from \"redux/selectors\";\nimport { setContactsFilter } from \"redux/filterSlice\";\n\nfunction Filter ()  {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n const changeFilter = e => {\n  dispatch(setContactsFilter(e.target.value.trim()));\n  };\n \n\n  return (\n    <FilterContainer>\n      <Text>Find contacts by name</Text>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\"Name\"\n        disabled={selectContacts.length === 0}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n\n","import styled from 'styled-components';\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  color: red;\n`;\n\nexport const ErrorButton = styled.button`\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  height: 28px;\n  width: 115px;\n  font-weight: 600;\n  font-size: 14px;\n  outline: none;\n  border: 1px solid skyblue;\n  border-radius: 4px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setError } from 'redux/contactsSlice';\nimport { selectError } from 'redux/selectors';\nimport { ErrorButton, ErrorText, ErrorWrapper } from './ErrorMessage.styled';\n\nexport default function ErrorMessage() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  return (\n    <ErrorWrapper>\n      <ErrorText>{error}</ErrorText>\n      <ErrorButton type=\"button\" onClick={() => dispatch(setError())}>\n        Close message\n      </ErrorButton>\n    </ErrorWrapper>\n  );\n}","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectError, selectIsLoading } from \"redux/selectors\";\nimport Form from \"components/Form/Form\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport { Container, Title } from \"./ContactsPage.styled\";\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n            <Form/>\n      <Title>  \n         Your Contacts {isLoading && <Loader/>}\n      </Title>\n      <Filter/>\n      {error ? <ErrorMessage/> : <ContactList/>}\n    </Container>\n    \n  );\n}\n\nexport default ContactsPage;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","FormEl","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","onSubmit","e","preventDefault","contact","find","Notiflix","concat","_ref2","replace","addContact","autoComplete","children","_jsx","type","pattern","title","required","value","onChange","target","Item","ItemContainer","onClick","deleteContact","id","then","fetchContacts","List","filteredContacts","useEffect","Loader","length","map","Contact","FilterContainer","Text","setContactsFilter","trim","placeholder","disabled","ErrorWrapper","ErrorText","ErrorButton","ErrorMessage","setError","Container","Form","Title","Filter","ContactList"],"sourceRoot":""}